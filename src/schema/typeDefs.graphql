type Action {
  _id: ID!
  createdAt: Long
  updatedAt: Long
  name: String!
  description: String
  functionString: String
  resourceTemplateId: ID
  resourceTemplate: ResourceTemplate
}

type Trigger {
  _id: ID!
  createdAt: Long
  updatedAt: Long
  name: String!
  description: String
  functionString: String
  resourceTemplateId: ID
  resourceTemplate: ResourceTemplate
}

type Response {
  _id: ID!
  createdAt: Long
  updatedAt: Long
  name: String!
  description: String
  platforms: [ResponsePlatform]
}

type ResponsePlatform {
  integrationId: ID
  build: Float
  localeGroups: [ResponseLocaleGroup]
}

type ResponseLocaleGroup {
  localeGroup: String
  variations: [ResponseVariation]
}

type ResponseVariation {
  name: String!
  responses: JSON
}

type ResourceTemplate {
  _id: ID!
  createdAt: Long
  updatedAt: Long
  name: String!
  description: String
  schema: JSON
  integrationId: String
  functionString: String
  key: String
}

type Redirect {
  nodeCompositeId: ID
  sendResponse: Boolean
  runPreAction: Boolean
  runPostAction: Boolean
}

type NodeObject {
  _id: ID!
  createdAt: Long
  updatedAt: Long
  name: String!
  description: String
  parents: [NodeObject]
  parentIds: [ID]
  root: Boolean
  trigger: Trigger
  triggerId: ID
  responses: [Response]
  responseIds: [ID]
  actions: [Action]
  actionIds: [ID]
  postActions: [Action]
  priority: Float
  compositeId: ID
  global: Boolean
  colour: String
  redirect: Redirect
}

scalar Long
scalar JSON

type Query {
  node(nodeId: ID): NodeObject
}